name: "CodeQL SAST Scan"

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    - cron: '30 1 * * 0'
  workflow_dispatch:

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: codeql-results

    - name: Upload SARIF results
      uses: actions/upload-artifact@v4
      with:
        name: sarif-results
        path: codeql-results

  generate-report:
    needs: analyze
    name: Generate HTML Report
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Download SARIF results
      uses: actions/download-artifact@v4
      with:
        name: sarif-results

    - name: Install sarif-converter
      run: |
        echo "üì• Installation de sarif-converter..."
        wget -O sarif-converter https://gitlab.com/ignis-build/sarif-converter/-/releases/permalink/latest/downloads/bin/sarif-converter-linux
        chmod +x sarif-converter
        
        # V√©rifier que l'outil fonctionne
        echo "üîç V√©rification de la version :"
        ./sarif-converter --version || echo "‚ö†Ô∏è Impossible d'afficher la version, mais continuation..."

    - name: Debug - Explorer la structure
      run: |
        echo "üîç Exploration des fichiers..."
        echo "=== Arborescence compl√®te ==="
        find . -name "*.sarif" -type f | while read file; do
          echo "üìÑ Fichier SARIF: $file"
          echo "   Taille: $(wc -l < "$file") lignes"
        done
        
        echo "=== Contenu du dossier courant ==="
        ls -la
        
        echo "=== Contenu de codeql-results ==="
        ls -la codeql-results/ 2>/dev/null || echo "Dossier codeql-results non trouv√©"

    - name: Convert all SARIF files to HTML
      run: |
        # Cr√©er un r√©pertoire pour les rapports
        mkdir -p html-reports
        
        # Convertir tous les fichiers SARIF trouv√©s
        SARIF_FILES=$(find . -name "*.sarif" -type f)
        
        if [ -z "$SARIF_FILES" ]; then
          echo "‚ùå Aucun fichier SARIF trouv√©"
          exit 1
        fi
        
        echo "üéØ Fichiers SARIF √† convertir :"
        echo "$SARIF_FILES"
        
        COUNTER=1
        for sarif_file in $SARIF_FILES; do
          echo "üîÑ Conversion de: $sarif_file"
          filename=$(basename "$sarif_file" .sarif)
          output_file="html-reports/report-${COUNTER}-${filename}.html"
          
          ./sarif-converter --type html "$sarif_file" "$output_file"
          
          if [ -f "$output_file" ]; then
            echo "‚úÖ Converti: $output_file"
            COUNTER=$((COUNTER + 1))
          else
            echo "‚ùå √âchec conversion: $sarif_file"
          fi
        done
        
        # Cr√©er un rapport principal
        MAIN_REPORT=$(find html-reports -name "*.html" -type f | head -1)
        if [ -n "$MAIN_REPORT" ]; then
          cp "$MAIN_REPORT" codeql-report.html
          echo "üìä Rapport principal cr√©√©: codeql-report.html"
        fi

    - name: Upload HTML reports
      uses: actions/upload-artifact@v4
      with:
        name: codeql-sast-reports
        path: |
          codeql-report.html
          html-reports/
        retention-days: 30

    - name: Display report summary
      run: |
        echo "üìà R√âSUM√â DES RAPPORTS G√âN√âR√âS"
        echo "================================"
        if [ -f "codeql-report.html" ]; then
          echo "‚úÖ Rapport principal: codeql-report.html"
          echo "   Taille: $(du -h codeql-report.html | cut -f1)"
        fi
        
        if [ -d "html-reports" ]; then
          echo "üìÅ Rapports d√©taill√©s:"
          find html-reports -name "*.html" -type f -exec echo "   - {} ($(du -h {} | cut -f1))" \;
        fi
