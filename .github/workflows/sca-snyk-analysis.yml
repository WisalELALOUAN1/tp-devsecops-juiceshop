# .github/workflows/sca-snyk-analysis.yml
name: "SCA - Security Scan Dependencies"

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  sca-snyk:
    name: SCA - Analyse des DÃ©pendances
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies (sans build)
      run: |
        echo "Installation des dependances sans build..."
        if [ -f "package.json" ]; then
          npm install --ignore-scripts --no-audit --no-fund
          echo "Dependances installees (sans build)"
        else
          echo "package.json non trouve - arret du workflow"
          exit 1
        fi

    - name: Setup Snyk
      run: |
        echo "Installation de Snyk..."
        npm install -g snyk

    - name: Authenticate Snyk
      run: |
        echo "Authentification avec Snyk..."
        # Utilise le token depuis les secrets GitHub
        snyk auth ${{ secrets.SNYK_TOKEN }}
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Scan des vulnerabilites
      run: |
        echo "Lancement du scan Snyk authentifie..."
        npx snyk test --dev --json-file-output=snyk-results.json
        
        if [ -f "snyk-results.json" ]; then
          echo "Scan authentifie reussi"
          VULN_COUNT=$(cat snyk-results.json | jq -r '.uniqueCounts | if . then .critical+.high+.medium+.low else 0 end' 2>/dev/null || echo "0")
          echo "Nombre total de vulnerabilites: $VULN_COUNT"
        else
          echo "Erreur lors du scan authentifie"
          exit 1
        fi

    - name: Generer rapport HTML
      run: |
        npm install -g snyk-to-html
        snyk-to-html -i snyk-results.json -o snyk-report.html
        echo "Rapport HTML genere"

    - name: Creer le resume
      run: |
        echo "# RAPPORT SCA - SNYK" > resume-sca.md
        echo "" >> resume-sca.md
        echo "**Date:** $(date)" >> resume-sca.md
        echo "**Projet:** Juice Shop" >> resume-sca.md
        echo "**Node.js:** $(node --version)" >> resume-sca.md
        echo "" >> resume-sca.md
        if [ -f "snyk-results.json" ]; then
          CRITICAL=$(cat snyk-results.json | jq -r '.uniqueCounts.critical // 0' 2>/dev/null || echo "0")
          HIGH=$(cat snyk-results.json | jq -r '.uniqueCounts.high // 0' 2>/dev/null || echo "0")
          MEDIUM=$(cat snyk-results.json | jq -r '.uniqueCounts.medium // 0' 2>/dev/null || echo "0")
          LOW=$(cat snyk-results.json | jq -r '.uniqueCounts.low // 0' 2>/dev/null || echo "0")
          echo "## Resume des Vulnerabilites" >> resume-sca.md
          echo "" >> resume-sca.md
          echo "| Severite | Nombre |" >> resume-sca.md
          echo "|----------|--------|" >> resume-sca.md
          echo "| Critical | $CRITICAL |" >> resume-sca.md
          echo "| High | $HIGH |" >> resume-sca.md
          echo "| Medium | $MEDIUM |" >> resume-sca.md
          echo "| Low | $LOW |" >> resume-sca.md
        fi
        echo "" >> resume-sca.md
        echo "## Fichiers disponibles:" >> resume-sca.md
        echo "- `snyk-results.json` - Donnees brutes" >> resume-sca.md
        echo "- `snyk-report.html` - Rapport visuel" >> resume-sca.md

    - name: Upload Rapports
      uses: actions/upload-artifact@v4
      with:
        name: rapports-sca-snyk
        path: |
          snyk-results.json
          snyk-report.html
          resume-sca.md
        retention-days: 30

    - name: Confirmation
      run: |
        echo "ANALYSE SCA TERMINEE AVEC SUCCES !"
        echo "Rapports disponibles dans les ARTIFACTS"
